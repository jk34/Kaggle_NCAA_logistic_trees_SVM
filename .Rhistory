getwd()
setwd("C:/Users/jerry/Desktop/Kaggle")
#RESPONSE VARIABLES
tourneyRes<-read.csv("tourney_compact_results.csv")
season_matches <- tourneyRes[which(tourneyRes$season == "2014"), ]
team <- vector()
result <- vector()
for(i in c(1:nrow(season_matches))) {
row <- season_matches[i, ]
if(row$wteam < row$lteam) {
vector <- paste("2014","_",row$wteam,"_", row$lteam, sep ="")
team <- c(team, vector)
result <- c(result, 1)
} else {
oth <- paste("2014", "_", row$lteam, "_", row$wteam, sep ="")
team <- c(team, oth)
result <- c(result, 0)
}
}
train_data_frame <- data.frame("Matchup" = team, "Win" = result)
head(train_data_frame)
#PREDICTORS
#Installing package
install.packages('stringr')
library('stringr')
#Selecting and sorting the playoff teamIDs least to greatest for season A
tourneySeeds<-read.csv("tourney_seeds.csv")
regSeason<-read.csv("regular_season_compact_results.csv")
playoff_teams <- sort(tourneySeeds$team[which(tourneySeeds$season == "2014")])
#Selecting the seeds for season A
playoff_seeds <- tourneySeeds[which(tourneySeeds$season == "2014"), ]
#Selecting the regular season statistics for season A
season <- regSeason[which(regSeason$season == "2014"), ]
#Wins by team
win_freq_table <- as.data.frame(table(season$wteam))
wins_by_team <- win_freq_table[win_freq_table$Var1 %in% playoff_teams, ]
# see http://www.r-bloggers.com/how-to-get-the-frequency-table-of-a-categorical-variable-as-a-data-frame-in-r/
#for how freq is number of occurrences for each var1 in the win_freq_table
#Losses by team
loss_freq_table <- as.data.frame(table(season$lteam))
loss_by_team <- loss_freq_table[loss_freq_table$Var1 %in% playoff_teams, ]
#Total Win Percentage
gamesplayed <- as.vector(wins_by_team$Freq + loss_by_team$Freq)
total_winpct <- round(wins_by_team$Freq / gamesplayed, digits = 3)
total_winpct_by_team <- as.data.frame(cbind(as.vector(loss_by_team$Var1), total_winpct))
colnames(total_winpct_by_team) <- c("Var1", "Freq")
#Num of wins in last 6 games
wins_last_six_games_by_team <- data.frame()
for(i in playoff_teams) {
games <- season[which(season$wteam == i | season$lteam == i), ]
numwins <- sum(tail(games$wteam) == i)
put <- c(i, numwins)
wins_last_six_games_by_team <- rbind(wins_last_six_games_by_team, put)
}
colnames(wins_last_six_games_by_team) <- c("Var1", "Freq")
#Seed in tournament
pattern <- "[A-Z]([0-9][0-9])"
team_seeds <- as.data.frame(str_match(playoff_seeds$seed, pattern))
seeds <- as.numeric(team_seeds$V2)
playoff_seeds$seed  <- seeds
seed_col <- vector()
for(i in playoff_teams) {
val <- match(i, playoff_seeds$team)
seed_col <- c(seed_col, playoff_seeds$seed[val])
}
team_seed <- data.frame("Var1" = playoff_teams, "Freq" =seed_col)
#Combining columns together
team_metrics <- data.frame()
team_metrics <- cbind(total_winpct_by_team, wins_last_six_games_by_team$Freq, team_seed$Freq)
colnames(team_metrics) <- c("TEAMID", "A_TWPCT","A_WST6", "A_SEED")
tourneySeeds<-read.csv("tourney_seeds.csv")
regSeason<-read.csv("regular_season_compact_results.csv")
playoff_teams <- sort(tourneySeeds$team[which(tourneySeeds$season == "2014")])
#Selecting the seeds for season A
playoff_seeds <- tourneySeeds[which(tourneySeeds$season == "2014"), ]
#Selecting the regular season statistics for season A
season <- regSeason[which(regSeason$season == "2014"), ]
win_freq_table <- as.data.frame(table(season$wteam))
wins_by_team <- win_freq_table[win_freq_table$Var1 %in% playoff_teams, ]
head(win_freq_table)
head(wins_by_team)
length(wins_by_team)
rows(wins_by_team)
nrows(wins_by_team)
nrow(wins_by_team)
nrow(loss_by_team)
Freq[wins_by_team$Var1==1112]
wins_by_team[wins_by_team$Var1==1112]
wins_by_team[which(wins_by_team$Var1==1112)]
wins_by_team[which(wins_by_team$Var1=="1112"), ]
loss_by_team[which(wins_by_team$Var1=="1455"), ]
wins_by_team[which(wins_by_team$Var1=="1455"), ]
loss_by_team<-rbind(loss_by_team, data.frame(Var1=1455, Freq=0))
head(loss_freq_table)
loss_freq_table[which(loss_freq_table$Var1=="1455"), ]
loss_freq_table[which(wins_by_team$Var1=="1455"), ]
loss_freq_table[which(loss_freq_table$Var1=="1112"), ]
loss_by_team[which(loss_by_team$Var1=="1455"), ]
loss_by_team<-rbind(loss_by_team, data.frame(Var1=1455, Freq=0))
loss_by_team$Var1 <- as.character(loss_by_team$Var1)
loss_by_team<-rbind(loss_by_team, data.frame(Var1=1455, Freq=0))
loss_by_team[which(loss_by_team$Var1=="1455"), ]
nrow(loss_by_team)
nrow(wins_by_team)
wins_by_team$Var1 <- as.character(wins_by_team$Var1)
nrow(wins_by_team)
loss_freq_table <- as.data.frame(table(season$lteam))
loss_by_team <- loss_freq_table[loss_freq_table$Var1 %in% playoff_teams, ]
nrow(loss_by_team)
loss_by_team$Var1 <- as.character(loss_by_team$Var1)
loss_by_team[which(loss_by_team$Var1=="1455"), ]
loss_by_team<-rbind(loss_by_team, data.frame(Var1=1455, Freq=0))
nrow(loss_by_team)
tourneySeeds<-read.csv("tourney_seeds.csv")
regSeason<-read.csv("regular_season_compact_results.csv")
playoff_teams <- sort(tourneySeeds$team[which(tourneySeeds$season == "2014")])
#Selecting the seeds for season A
playoff_seeds <- tourneySeeds[which(tourneySeeds$season == "2014"), ]
#Selecting the regular season statistics for season A
season <- regSeason[which(regSeason$season == "2014"), ]
#Wins by team
win_freq_table <- as.data.frame(table(season$wteam))
wins_by_team <- win_freq_table[win_freq_table$Var1 %in% playoff_teams, ]
# see http://www.r-bloggers.com/how-to-get-the-frequency-table-of-a-categorical-variable-as-a-data-frame-in-r/
#for how freq is number of occurrences for each var1 in the win_freq_table
#Losses by team
loss_freq_table <- as.data.frame(table(season$lteam))
loss_by_team <- loss_freq_table[loss_freq_table$Var1 %in% playoff_teams, ]
#to add Wichita State, since they were undefeated in reg. season
loss_by_team$Var1 <- as.character(loss_by_team$Var1)
loss_by_team<-rbind(loss_by_team, data.frame(Var1=1455, Freq=0))
#Total Win Percentage
gamesplayed <- as.vector(wins_by_team$Freq + loss_by_team$Freq)
total_winpct <- round(wins_by_team$Freq / gamesplayed, digits = 3)
total_winpct_by_team <- as.data.frame(cbind(as.vector(loss_by_team$Var1), total_winpct))
colnames(total_winpct_by_team) <- c("Var1", "Freq")
#Num of wins in last 6 games
wins_last_six_games_by_team <- data.frame()
for(i in playoff_teams) {
games <- season[which(season$wteam == i | season$lteam == i), ]
numwins <- sum(tail(games$wteam) == i)
put <- c(i, numwins)
wins_last_six_games_by_team <- rbind(wins_last_six_games_by_team, put)
}
colnames(wins_last_six_games_by_team) <- c("Var1", "Freq")
#Seed in tournament
pattern <- "[A-Z]([0-9][0-9])"
team_seeds <- as.data.frame(str_match(playoff_seeds$seed, pattern))
seeds <- as.numeric(team_seeds$V2)
playoff_seeds$seed  <- seeds
seed_col <- vector()
for(i in playoff_teams) {
val <- match(i, playoff_seeds$team)
seed_col <- c(seed_col, playoff_seeds$seed[val])
}
team_seed <- data.frame("Var1" = playoff_teams, "Freq" =seed_col)
#Combining columns together
team_metrics <- data.frame()
team_metrics <- cbind(total_winpct_by_team, wins_last_six_games_by_team$Freq, team_seed$Freq)
colnames(team_metrics) <- c("TEAMID", "A_TWPCT","A_WST6", "A_SEED")
head(team_metrics)
source("blog_utility.R")
source('C:/Users/jerry/Desktop/Kaggle/blog_utility.R')
head(train_frame_model)
head(model_data_frame)
test_frame_model(2014)
head(model_data_frame)
x<-test_frame_model(2014)
x<-test_frame_model(2014)
seasonletter<-2014
playoff_teams <- sort(tourneySeeds$team[which(tourneySeeds$season == seasonletter)])
playoff_seeds <- tourneySeeds[which(tourneySeeds$season == seasonletter), ]
season <- regSeason[which(regSeason$season == seasonletter), ]
##Each of these dataframes is labled "Var1" and "Freq" for TeamID and Statistic respectively
#Wins (NOT A USABLEVAR, must scale)
win_freq_table <- as.data.frame(table(season$wteam))
wins_by_team <- win_freq_table[win_freq_table$Var1 %in% playoff_teams, ]
#Losses (NOT A USABLEVAR, must scale)
loss_freq_table <- as.data.frame(table(season$lteam), stringsAsFactors = FALSE)
loss_by_team <- loss_freq_table[loss_freq_table$Var1 %in% playoff_teams, ]
#to add Wichita State, since they were undefeated in reg. season
loss_by_team$Var1 <- as.character(loss_by_team$Var1)
loss_by_team<-rbind(loss_by_team, data.frame(Var1=1455, Freq=0))
#Total Win Percentage
gamesplayed <- as.vector(wins_by_team$Freq + loss_by_team$Freq)
total_winpct <- round(wins_by_team$Freq / gamesplayed, digits = 3)
total_winpct_by_team <- as.data.frame(cbind(as.vector(loss_by_team$Var1), total_winpct))
colnames(total_winpct_by_team) <- c("Var1", "Freq")
#Num of wins in last 6 games
wins_last_six_games_by_team <- data.frame()
for(i in playoff_teams) {
games <- season[which(season$wteam == i | season$lteam == i), ]
numwins <- sum(tail(games$wteam) == i)
put <- c(i, numwins)
wins_last_six_games_by_team <- rbind(wins_last_six_games_by_team, put)
}
colnames(wins_last_six_games_by_team) <- c("Var1", "Freq")
#Seed
pattern <- "[A-Z]([0-9][0-9])"
team_seeds <- as.data.frame(str_match(playoff_seeds$seed, pattern))
seeds <- as.numeric(team_seeds$V2)
playoff_seeds$seed  <- seeds
seed_col <- vector()
for(i in playoff_teams) {
val <- match(i, playoff_seeds$team)
seed_col <- c(seed_col, playoff_seeds$seed[val])
}
team_seed <- data.frame("Var1" = playoff_teams, "Freq" =seed_col)
team_metrics <- data.frame()
team_metrics <- cbind(total_winpct_by_team, wins_last_six_games_by_team$Freq,
team_seed$Freq)
colnames(team_metrics) <- c("TEAMID", "A_TWPCT", "A_WST6", "A_SEED")
teamMetrics<-team_metrics
teamMetrics <- team_metrics_by_season(seasonletter)
season_matches <- tourneyRes[which(tourneyRes$season == seasonletter), ]
team <- vector()
result <- vector()
for(i in c(1:nrow(season_matches))) {
row <- season_matches[i, ]
if(row$wteam < row$lteam) {
vector <- paste(seasonletter,"_",row$wteam,"_", row$lteam, sep ="")
team <- c(team, vector)
result <- c(result, 1)
} else {
oth <- paste(seasonletter, "_", row$lteam, "_", row$wteam, sep ="")
team <- c(team, oth)
result <- c(result, 0)
}
}
model_data_frame <- data.frame("Matchup" = team, "Win" = result)
teamMetrics_away <- teamMetrics
colnames(teamMetrics_away) <- c("TEAMID", "B_TWPCT","B_WST6", "B_SEED")
pattern <- "[A-Z]_([0-9]{3})_([0-9]{3})"
teamIDs <- as.data.frame(str_match(model_data_frame$Matchup, pattern))
teamIDs <- teamIDs[ , c(2,3)]
colnames(teamIDs) <- c("HomeID", "AwayID")
model_data_frame <- cbind(model_data_frame, teamIDs)
home_frame <- data.frame()
for(i in model_data_frame$HomeID) {
home_frame <- rbind(home_frame, teamMetrics[match(i, teamMetrics$TEAMID), ])
}
#Removing teamID column
home_frame <- home_frame[ , -1]
away_frame <- data.frame()
for(i in model_data_frame$AwayID) {
away_frame <- rbind(away_frame, teamMetrics_away[match(i, teamMetrics_away$TEAMID), ])
}
away_frame <- away_frame[ , -1]
model_data_frame <- cbind(model_data_frame, home_frame, away_frame)
nrow(loss_by_team)
nrow(wins_by_team)
head(model_data_frame)
team_metrics_by_season(2014)
nrow(wins_by_team)
nrow(loss_by_team)
gamesplayed
totalwinpct_by_team[which(totalwinpct_by_team$Var1=="1455"), ]
totalwinpct[which(totalwinpct$Var1=="1455"), ]
total_winpct <- round(wins_by_team$Freq / gamesplayed, digits = 3)
total_winpct_by_team <- as.data.frame(cbind(as.vector(loss_by_team$Var1), total_winpct))
totalwinpct_by_team[which(totalwinpct_by_team$Var1=="1455"), ]
head(totalwinpct_by_team)
nrow(loss_by_team$Var1)
nrow(loss_by_team)
nrow(total_winpct)
head(gamesplayed)
tail(gamesplayed)
head(loss_by_team)
loss_by_team[which(loss_by_team$Var1=="1455"), ]
tourneySeeds<-read.csv("tourney_seeds.csv")
regSeason<-read.csv("regular_season_compact_results.csv")
playoff_teams <- sort(tourneySeeds$team[which(tourneySeeds$season == "2014")])
#Selecting the seeds for season A
playoff_seeds <- tourneySeeds[which(tourneySeeds$season == "2014"), ]
#Selecting the regular season statistics for season A
season <- regSeason[which(regSeason$season == "2014"), ]
#Wins by team
win_freq_table <- as.data.frame(table(season$wteam))
wins_by_team <- win_freq_table[win_freq_table$Var1 %in% playoff_teams, ]
# see http://www.r-bloggers.com/how-to-get-the-frequency-table-of-a-categorical-variable-as-a-data-frame-in-r/
#for how freq is number of occurrences for each var1 in the win_freq_table
#Losses by team
loss_freq_table <- as.data.frame(table(season$lteam))
loss_by_team <- loss_freq_table[loss_freq_table$Var1 %in% playoff_teams, ]
#to add Wichita State, since they were undefeated in reg. season
loss_by_team$Var1 <- as.character(loss_by_team$Var1)
loss_by_team<-rbind(loss_by_team, data.frame(Var1=1455, Freq=0))
#loss_by_team[which(loss_by_team$Var1=="1455"), ]
#Var1 Freq
#681 1455    0
#Total Win Percentage
gamesplayed <- as.vector(wins_by_team$Freq + loss_by_team$Freq)
gamesplayed
total_winpct <- round(wins_by_team$Freq / gamesplayed, digits = 3)
head(total_winpct)
nrow(total_winpct)
total_winpct_by_team <- as.data.frame(cbind(as.vector(loss_by_team$Var1), total_winpct))
nrow(total_winpct_by_team)
head(total_winpct_by_team)
total_winpct_by_tea[which(total_winpct_by_tea$V1=="1455"), ]
total_winpct_by_team[which(total_winpct_by_team$V1=="1455"), ]
team_metrics_by_season(2014)
total_winpct_by_team[which(total_winpct_by_team$V1=="1455"), ]
playoff_teams <- sort(tourneySeeds$team[which(tourneySeeds$season == seasonletter)])
playoff_seeds <- tourneySeeds[which(tourneySeeds$season == seasonletter), ]
season <- regSeason[which(regSeason$season == seasonletter), ]
##Each of these dataframes is labled "Var1" and "Freq" for TeamID and Statistic respectively
#Wins (NOT A USABLEVAR, must scale)
win_freq_table <- as.data.frame(table(season$wteam))
wins_by_team <- win_freq_table[win_freq_table$Var1 %in% playoff_teams, ]
#Losses (NOT A USABLEVAR, must scale)
loss_freq_table <- as.data.frame(table(season$lteam), stringsAsFactors = FALSE)
loss_by_team <- loss_freq_table[loss_freq_table$Var1 %in% playoff_teams, ]
#to add Wichita State, since they were undefeated in reg. season
loss_by_team$Var1 <- as.character(loss_by_team$Var1)
loss_by_team<-rbind(loss_by_team, data.frame(Var1=1455, Freq=0))
#loss_by_team[which(loss_by_team$Var1=="1455"), ]
#Var1 Freq
#681 1455    0
#Total Win Percentage
gamesplayed <- as.vector(wins_by_team$Freq + loss_by_team$Freq)
total_winpct <- round(wins_by_team$Freq / gamesplayed, digits = 3)
total_winpct_by_team <- as.data.frame(cbind(as.vector(loss_by_team$Var1), total_winpct))
total_winpct_by_team[which(total_winpct_by_team$V1=="1455"), ]
colnames(total_winpct_by_team) <- c("Var1", "Freq")
#Num of wins in last 6 games
wins_last_six_games_by_team <- data.frame()
for(i in playoff_teams) {
games <- season[which(season$wteam == i | season$lteam == i), ]
numwins <- sum(tail(games$wteam) == i)
put <- c(i, numwins)
wins_last_six_games_by_team <- rbind(wins_last_six_games_by_team, put)
}
colnames(wins_last_six_games_by_team) <- c("Var1", "Freq")
#Seed
pattern <- "[A-Z]([0-9][0-9])"
team_seeds <- as.data.frame(str_match(playoff_seeds$seed, pattern))
seeds <- as.numeric(team_seeds$V2)
playoff_seeds$seed  <- seeds
seed_col <- vector()
for(i in playoff_teams) {
val <- match(i, playoff_seeds$team)
seed_col <- c(seed_col, playoff_seeds$seed[val])
}
team_seed <- data.frame("Var1" = playoff_teams, "Freq" =seed_col)
team_metrics <- data.frame()
team_metrics <- cbind(total_winpct_by_team, wins_last_six_games_by_team$Freq,
team_seed$Freq)
colnames(team_metrics) <- c("TEAMID", "A_TWPCT", "A_WST6", "A_SEED")
team_metrics
tourneySeeds<-read.csv("tourney_seeds.csv")
regSeason<-read.csv("regular_season_compact_results.csv")
playoff_teams <- sort(tourneySeeds$team[which(tourneySeeds$season == "2014")])
#Selecting the seeds for season A
playoff_seeds <- tourneySeeds[which(tourneySeeds$season == "2014"), ]
#Selecting the regular season statistics for season A
season <- regSeason[which(regSeason$season == "2014"), ]
#Wins by team
win_freq_table <- as.data.frame(table(season$wteam))
wins_by_team <- win_freq_table[win_freq_table$Var1 %in% playoff_teams, ]
wins_by_team
team_metrics_by_season(2014)
playoff_teams <- sort(tourneySeeds$team[which(tourneySeeds$season == seasonletter)])
playoff_seeds <- tourneySeeds[which(tourneySeeds$season == seasonletter), ]
season <- regSeason[which(regSeason$season == seasonletter), ]
##Each of these dataframes is labled "Var1" and "Freq" for TeamID and Statistic respectively
#Wins (NOT A USABLEVAR, must scale)
win_freq_table <- as.data.frame(table(season$wteam))
wins_by_team <- win_freq_table[win_freq_table$Var1 %in% playoff_teams, ]
#Losses (NOT A USABLEVAR, must scale)
loss_freq_table <- as.data.frame(table(season$lteam), stringsAsFactors = FALSE)
loss_by_team <- loss_freq_table[loss_freq_table$Var1 %in% playoff_teams, ]
#to add Wichita State, since they were undefeated in reg. season
loss_by_team$Var1 <- as.character(loss_by_team$Var1)
loss_by_team<-rbind(loss_by_team, data.frame(Var1=1455, Freq=0))
#loss_by_team[which(loss_by_team$Var1=="1455"), ]
#Var1 Freq
#681 1455    0
#Total Win Percentage
gamesplayed <- as.vector(wins_by_team$Freq + loss_by_team$Freq)
total_winpct <- round(wins_by_team$Freq / gamesplayed, digits = 3)
total_winpct_by_team <- as.data.frame(cbind(as.vector(loss_by_team$Var1), total_winpct))
total_winpct_by_team
win_freq_table
wins_by_team
tourneySeeds<-read.csv("tourney_seeds.csv")
regSeason<-read.csv("regular_season_compact_results.csv")
playoff_teams <- sort(tourneySeeds$team[which(tourneySeeds$season == "2014")])
#Selecting the seeds for season A
playoff_seeds <- tourneySeeds[which(tourneySeeds$season == "2014"), ]
#Selecting the regular season statistics for season A
season <- regSeason[which(regSeason$season == "2014"), ]
#Wins by team
win_freq_table <- as.data.frame(table(season$wteam))
wins_by_team <- win_freq_table[win_freq_table$Var1 %in% playoff_teams, ]
# see http://www.r-bloggers.com/how-to-get-the-frequency-table-of-a-categorical-variable-as-a-data-frame-in-r/
#for how freq is number of occurrences for each var1 in the win_freq_table
#Losses by team
loss_freq_table <- as.data.frame(table(season$lteam))
loss_by_team <- loss_freq_table[loss_freq_table$Var1 %in% playoff_teams, ]
#to add Wichita State, since they were undefeated in reg. season
loss_by_team$Var1 <- as.character(loss_by_team$Var1)
loss_by_team<-rbind(loss_by_team, data.frame(Var1=1455, Freq=0))
loss_by_team
loss_by_team <- loss_by_team[order(loss_by_team$Var1),]
loss_by_team
team_metrics_by_season(2014)
wins_last_six_games_by_team
total_winpct_by_team
wins_by_team
total_winpct
wins_by_team
loss_by_team
gamesplayed
team_metrics_by_season(2013)
train_frame_model(2013)
test_frame_model(2013)
train_frame_model(2013)
