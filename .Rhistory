}
actual_data_frame <- data.frame("Matchup" = team, "Win" = result)
head(actual_data_frame)
#check how accurate model was
final_logit<-merge(subfile,actual_data_frame,by.x="id",by.y="Matchup")
#remove NA
final_logit<-final_logit[complete.cases(final_logit),]
#get results of accuracy
sum<-0
for(i in c(1:nrow(final_logit))) {
row <- final_logit[i, ]
if(row$Win==1)
#sum <- row$pred*row$Win + sum
sum <- log(row$pred)*row$Win + sum
else
sum <- log(1-row$pred) + sum
#sum <- 1 - row$pred + sum
}
logloss_KNN<- (-sum)/nrow(final_logit)
logloss_KNN
output <- knn(binTrain1, binTest1, c1, k = 30, prob=TRUE)
head(output)
head(attributes(output)$prob)
output <- knn(binTrain1, binTest1, c1, k = 50, prob=TRUE)
head(output)
head(attributes(output)$prob)
subfile <- data.frame(id = testData$Matchup, pred = attributes(output)$prob) #predictions)
write.csv(subfile, file = "KNN_model.csv", row.names = FALSE)
#to see how well model matched actual tournament results
tourneyRes<-read.csv("tourney_compact_results.csv")
season_matches <- tourneyRes[which(tourneyRes$season == "2013"), ]
team <- vector()
result <- vector()
for(i in c(1:nrow(season_matches))) {
row <- season_matches[i, ]
if(row$wteam < row$lteam) {
vector <- paste("2013","_",row$wteam,"_", row$lteam, sep ="")
team <- c(team, vector)
result <- c(result, 1)
} else {
oth <- paste("2013", "_", row$lteam, "_", row$wteam, sep ="")
team <- c(team, oth)
result <- c(result, 0)
}
}
actual_data_frame <- data.frame("Matchup" = team, "Win" = result)
head(actual_data_frame)
#check how accurate model was
final_logit<-merge(subfile,actual_data_frame,by.x="id",by.y="Matchup")
#remove NA
final_logit<-final_logit[complete.cases(final_logit),]
#get results of accuracy
sum<-0
for(i in c(1:nrow(final_logit))) {
row <- final_logit[i, ]
if(row$Win==1)
#sum <- row$pred*row$Win + sum
sum <- log(row$pred)*row$Win + sum
else
sum <- log(1-row$pred) + sum
#sum <- 1 - row$pred + sum
}
logloss_KNN<- (-sum)/nrow(final_logit)
logloss_KNN
binaryTrain=ifelse(trainData$Win==1,"Win","Lose")
binaryTest=ifelse(testData$Win==1,"Win","Lose")
binTrain=data.frame(trainData,binaryTrain)
binTest=data.frame(testData,binaryTest)
c1=as.factor(binTrain$binaryTrain)
binTrain1<-binTrain[,names(binTrain)[-c(1,2,3,4,13)]]
binTest1<-binTest[,names(binTest)[-c(1,2,3,4,13)]]
output <- knn(binTrain1, binTest1, c1, k = 75, prob=TRUE)
#predictions_KNN <- predict(output, binTest, type = "prob")
#predictions <- data.frame(output)
#predictions<-predictions[,names(predictions)[-c(2)]]
subfile <- data.frame(id = testData$Matchup, pred = attributes(output)$prob) #predictions)
write.csv(subfile, file = "KNN_model.csv", row.names = FALSE)
#to see how well model matched actual tournament results
tourneyRes<-read.csv("tourney_compact_results.csv")
season_matches <- tourneyRes[which(tourneyRes$season == "2013"), ]
team <- vector()
result <- vector()
for(i in c(1:nrow(season_matches))) {
row <- season_matches[i, ]
if(row$wteam < row$lteam) {
vector <- paste("2013","_",row$wteam,"_", row$lteam, sep ="")
team <- c(team, vector)
result <- c(result, 1)
} else {
oth <- paste("2013", "_", row$lteam, "_", row$wteam, sep ="")
team <- c(team, oth)
result <- c(result, 0)
}
}
actual_data_frame <- data.frame("Matchup" = team, "Win" = result)
head(actual_data_frame)
#check how accurate model was
final_logit<-merge(subfile,actual_data_frame,by.x="id",by.y="Matchup")
#remove NA
final_logit<-final_logit[complete.cases(final_logit),]
#get results of accuracy
sum<-0
for(i in c(1:nrow(final_logit))) {
row <- final_logit[i, ]
if(row$Win==1)
#sum <- row$pred*row$Win + sum
sum <- log(row$pred)*row$Win + sum
else
sum <- log(1-row$pred) + sum
#sum <- 1 - row$pred + sum
}
logloss_KNN<- (-sum)/nrow(final_logit)
logloss_KNN
binaryTrain=ifelse(trainData$Win==1,"Win","Lose")
binaryTest=ifelse(testData$Win==1,"Win","Lose")
binTrain=data.frame(trainData,binaryTrain)
binTest=data.frame(testData,binaryTest)
c1=as.factor(binTrain$binaryTrain)
binTrain1<-binTrain[,names(binTrain)[-c(1,2,3,4,13)]]
binTest1<-binTest[,names(binTest)[-c(1,2,3,4,13)]]
output <- knn(binTrain1, binTest1, c1, k = 150, prob=TRUE)
#predictions_KNN <- predict(output, binTest, type = "prob")
#predictions <- data.frame(output)
#predictions<-predictions[,names(predictions)[-c(2)]]
subfile <- data.frame(id = testData$Matchup, pred = attributes(output)$prob) #predictions)
write.csv(subfile, file = "KNN_model.csv", row.names = FALSE)
#to see how well model matched actual tournament results
tourneyRes<-read.csv("tourney_compact_results.csv")
season_matches <- tourneyRes[which(tourneyRes$season == "2013"), ]
team <- vector()
result <- vector()
for(i in c(1:nrow(season_matches))) {
row <- season_matches[i, ]
if(row$wteam < row$lteam) {
vector <- paste("2013","_",row$wteam,"_", row$lteam, sep ="")
team <- c(team, vector)
result <- c(result, 1)
} else {
oth <- paste("2013", "_", row$lteam, "_", row$wteam, sep ="")
team <- c(team, oth)
result <- c(result, 0)
}
}
actual_data_frame <- data.frame("Matchup" = team, "Win" = result)
head(actual_data_frame)
#check how accurate model was
final_logit<-merge(subfile,actual_data_frame,by.x="id",by.y="Matchup")
#remove NA
final_logit<-final_logit[complete.cases(final_logit),]
#get results of accuracy
sum<-0
for(i in c(1:nrow(final_logit))) {
row <- final_logit[i, ]
if(row$Win==1)
#sum <- row$pred*row$Win + sum
sum <- log(row$pred)*row$Win + sum
else
sum <- log(1-row$pred) + sum
#sum <- 1 - row$pred + sum
}
logloss_KNN<- (-sum)/nrow(final_logit)
logloss_KNN
binaryTrain=ifelse(trainData$Win==1,"Win","Lose")
binaryTest=ifelse(testData$Win==1,"Win","Lose")
binTrain=data.frame(trainData,binaryTrain)
binTest=data.frame(testData,binaryTest)
c1=as.factor(binTrain$binaryTrain)
binTrain1<-binTrain[,names(binTrain)[-c(1,2,3,4,13)]]
binTest1<-binTest[,names(binTest)[-c(1,2,3,4,13)]]
output <- knn(binTrain1, binTest1, c1, k = 300, prob=TRUE)
#predictions_KNN <- predict(output, binTest, type = "prob")
#predictions <- data.frame(output)
#predictions<-predictions[,names(predictions)[-c(2)]]
subfile <- data.frame(id = testData$Matchup, pred = attributes(output)$prob) #predictions)
write.csv(subfile, file = "KNN_model.csv", row.names = FALSE)
#to see how well model matched actual tournament results
tourneyRes<-read.csv("tourney_compact_results.csv")
season_matches <- tourneyRes[which(tourneyRes$season == "2013"), ]
team <- vector()
result <- vector()
for(i in c(1:nrow(season_matches))) {
row <- season_matches[i, ]
if(row$wteam < row$lteam) {
vector <- paste("2013","_",row$wteam,"_", row$lteam, sep ="")
team <- c(team, vector)
result <- c(result, 1)
} else {
oth <- paste("2013", "_", row$lteam, "_", row$wteam, sep ="")
team <- c(team, oth)
result <- c(result, 0)
}
}
actual_data_frame <- data.frame("Matchup" = team, "Win" = result)
head(actual_data_frame)
#check how accurate model was
final_logit<-merge(subfile,actual_data_frame,by.x="id",by.y="Matchup")
#remove NA
final_logit<-final_logit[complete.cases(final_logit),]
#get results of accuracy
sum<-0
for(i in c(1:nrow(final_logit))) {
row <- final_logit[i, ]
if(row$Win==1)
#sum <- row$pred*row$Win + sum
sum <- log(row$pred)*row$Win + sum
else
sum <- log(1-row$pred) + sum
#sum <- 1 - row$pred + sum
}
logloss_KNN<- (-sum)/nrow(final_logit)
logloss_KNN
binaryTrain=ifelse(trainData$Win==1,"Win","Lose")
binaryTest=ifelse(testData$Win==1,"Win","Lose")
binTrain=data.frame(trainData,binaryTrain)
binTest=data.frame(testData,binaryTest)
c1=as.factor(binTrain$binaryTrain)
binTrain1<-binTrain[,names(binTrain)[-c(1,2,3,4,13)]]
binTest1<-binTest[,names(binTest)[-c(1,2,3,4,13)]]
set.seed(1)
output <- knn(binTrain1, binTest1, c1, k = 30, prob=TRUE)
#predictions_KNN <- predict(output, binTest, type = "prob")
#predictions <- data.frame(output)
#predictions<-predictions[,names(predictions)[-c(2)]]
subfile <- data.frame(id = testData$Matchup, pred = attributes(output)$prob) #predictions)
write.csv(subfile, file = "KNN_model.csv", row.names = FALSE)
#to see how well model matched actual tournament results
tourneyRes<-read.csv("tourney_compact_results.csv")
season_matches <- tourneyRes[which(tourneyRes$season == "2013"), ]
team <- vector()
result <- vector()
for(i in c(1:nrow(season_matches))) {
row <- season_matches[i, ]
if(row$wteam < row$lteam) {
vector <- paste("2013","_",row$wteam,"_", row$lteam, sep ="")
team <- c(team, vector)
result <- c(result, 1)
} else {
oth <- paste("2013", "_", row$lteam, "_", row$wteam, sep ="")
team <- c(team, oth)
result <- c(result, 0)
}
}
actual_data_frame <- data.frame("Matchup" = team, "Win" = result)
head(actual_data_frame)
#check how accurate model was
final_logit<-merge(subfile,actual_data_frame,by.x="id",by.y="Matchup")
#remove NA
final_logit<-final_logit[complete.cases(final_logit),]
#get results of accuracy
sum<-0
for(i in c(1:nrow(final_logit))) {
row <- final_logit[i, ]
if(row$Win==1)
#sum <- row$pred*row$Win + sum
sum <- log(row$pred)*row$Win + sum
else
sum <- log(1-row$pred) + sum
#sum <- 1 - row$pred + sum
}
logloss_KNN<- (-sum)/nrow(final_logit)
logloss_KNN
binaryTrain=ifelse(trainData$Win==1,"Win","Lose")
binaryTest=ifelse(testData$Win==1,"Win","Lose")
binTrain=data.frame(trainData,binaryTrain)
binTest=data.frame(testData,binaryTest)
c1=as.factor(binTrain$binaryTrain)
binTrain1<-binTrain[,names(binTrain)[-c(1,2,3,4,13)]]
binTest1<-binTest[,names(binTest)[-c(1,2,3,4,13)]]
set.seed(1)
output <- knn(binTrain1, binTest1, c1, k = 300, prob=TRUE)
#predictions_KNN <- predict(output, binTest, type = "prob")
#predictions <- data.frame(output)
#predictions<-predictions[,names(predictions)[-c(2)]]
subfile <- data.frame(id = testData$Matchup, pred = attributes(output)$prob) #predictions)
write.csv(subfile, file = "KNN_model.csv", row.names = FALSE)
#to see how well model matched actual tournament results
tourneyRes<-read.csv("tourney_compact_results.csv")
season_matches <- tourneyRes[which(tourneyRes$season == "2013"), ]
team <- vector()
result <- vector()
for(i in c(1:nrow(season_matches))) {
row <- season_matches[i, ]
if(row$wteam < row$lteam) {
vector <- paste("2013","_",row$wteam,"_", row$lteam, sep ="")
team <- c(team, vector)
result <- c(result, 1)
} else {
oth <- paste("2013", "_", row$lteam, "_", row$wteam, sep ="")
team <- c(team, oth)
result <- c(result, 0)
}
}
actual_data_frame <- data.frame("Matchup" = team, "Win" = result)
head(actual_data_frame)
#check how accurate model was
final_logit<-merge(subfile,actual_data_frame,by.x="id",by.y="Matchup")
#remove NA
final_logit<-final_logit[complete.cases(final_logit),]
#get results of accuracy
sum<-0
for(i in c(1:nrow(final_logit))) {
row <- final_logit[i, ]
if(row$Win==1)
#sum <- row$pred*row$Win + sum
sum <- log(row$pred)*row$Win + sum
else
sum <- log(1-row$pred) + sum
#sum <- 1 - row$pred + sum
}
logloss_KNN<- (-sum)/nrow(final_logit)
logloss_KNN
binaryTrain=ifelse(trainData$Win==1,"Win","Lose")
binaryTest=ifelse(testData$Win==1,"Win","Lose")
binTrain=data.frame(trainData,binaryTrain)
binTest=data.frame(testData,binaryTest)
c1=as.factor(binTrain$binaryTrain)
binTrain1<-binTrain[,names(binTrain)[-c(1,2,3,4,13)]]
binTest1<-binTest[,names(binTest)[-c(1,2,3,4,13)]]
set.seed(1)
output <- knn(binTrain1, binTest1, c1, k = 500, prob=TRUE)
#predictions_KNN <- predict(output, binTest, type = "prob")
#predictions <- data.frame(output)
#predictions<-predictions[,names(predictions)[-c(2)]]
subfile <- data.frame(id = testData$Matchup, pred = attributes(output)$prob) #predictions)
write.csv(subfile, file = "KNN_model.csv", row.names = FALSE)
#to see how well model matched actual tournament results
tourneyRes<-read.csv("tourney_compact_results.csv")
season_matches <- tourneyRes[which(tourneyRes$season == "2013"), ]
team <- vector()
result <- vector()
for(i in c(1:nrow(season_matches))) {
row <- season_matches[i, ]
if(row$wteam < row$lteam) {
vector <- paste("2013","_",row$wteam,"_", row$lteam, sep ="")
team <- c(team, vector)
result <- c(result, 1)
} else {
oth <- paste("2013", "_", row$lteam, "_", row$wteam, sep ="")
team <- c(team, oth)
result <- c(result, 0)
}
}
actual_data_frame <- data.frame("Matchup" = team, "Win" = result)
head(actual_data_frame)
#check how accurate model was
final_logit<-merge(subfile,actual_data_frame,by.x="id",by.y="Matchup")
#remove NA
final_logit<-final_logit[complete.cases(final_logit),]
#get results of accuracy
sum<-0
for(i in c(1:nrow(final_logit))) {
row <- final_logit[i, ]
if(row$Win==1)
#sum <- row$pred*row$Win + sum
sum <- log(row$pred)*row$Win + sum
else
sum <- log(1-row$pred) + sum
#sum <- 1 - row$pred + sum
}
logloss_KNN<- (-sum)/nrow(final_logit)
binaryTrain=ifelse(trainData$Win==1,"Win","Lose")
binaryTest=ifelse(testData$Win==1,"Win","Lose")
binTrain=data.frame(trainData,binaryTrain)
binTest=data.frame(testData,binaryTest)
c1=as.factor(binTrain$binaryTrain)
binTrain1<-binTrain[,names(binTrain)[-c(1,2,3,4,13)]]
binTest1<-binTest[,names(binTest)[-c(1,2,3,4,13)]]
set.seed(1)
output <- knn(binTrain1, binTest1, c1, k = 320, prob=TRUE)
#predictions_KNN <- predict(output, binTest, type = "prob")
#predictions <- data.frame(output)
#predictions<-predictions[,names(predictions)[-c(2)]]
subfile <- data.frame(id = testData$Matchup, pred = attributes(output)$prob) #predictions)
write.csv(subfile, file = "KNN_model.csv", row.names = FALSE)
#to see how well model matched actual tournament results
tourneyRes<-read.csv("tourney_compact_results.csv")
season_matches <- tourneyRes[which(tourneyRes$season == "2013"), ]
team <- vector()
result <- vector()
for(i in c(1:nrow(season_matches))) {
row <- season_matches[i, ]
if(row$wteam < row$lteam) {
vector <- paste("2013","_",row$wteam,"_", row$lteam, sep ="")
team <- c(team, vector)
result <- c(result, 1)
} else {
oth <- paste("2013", "_", row$lteam, "_", row$wteam, sep ="")
team <- c(team, oth)
result <- c(result, 0)
}
}
actual_data_frame <- data.frame("Matchup" = team, "Win" = result)
head(actual_data_frame)
#check how accurate model was
final_logit<-merge(subfile,actual_data_frame,by.x="id",by.y="Matchup")
#remove NA
final_logit<-final_logit[complete.cases(final_logit),]
#get results of accuracy
sum<-0
for(i in c(1:nrow(final_logit))) {
row <- final_logit[i, ]
if(row$Win==1)
#sum <- row$pred*row$Win + sum
sum <- log(row$pred)*row$Win + sum
else
sum <- log(1-row$pred) + sum
#sum <- 1 - row$pred + sum
}
logloss_KNN<- (-sum)/nrow(final_logit)
logloss_KNN
head(binTrain)
binaryTrain=ifelse(trainData$Win==1,"Win","Lose")
binaryTest=ifelse(testData$Win==1,"Win","Lose")
binTrain=data.frame(trainData,binaryTrain)
binTest=data.frame(testData,binaryTest)
c1=as.factor(binTrain$binaryTrain)
binTrain1<-binTrain[,names(binTrain)[-c(1,2,3,4,8,12,13)]]
binTest1<-binTest[,names(binTest)[-c(1,2,3,4,8,12,13)]]
set.seed(1)
output <- knn(binTrain1, binTest1, c1, k = 30, prob=TRUE)
#predictions_KNN <- predict(output, binTest, type = "prob")
#predictions <- data.frame(output)
#predictions<-predictions[,names(predictions)[-c(2)]]
subfile <- data.frame(id = testData$Matchup, pred = attributes(output)$prob) #predictions)
write.csv(subfile, file = "KNN_model.csv", row.names = FALSE)
#to see how well model matched actual tournament results
tourneyRes<-read.csv("tourney_compact_results.csv")
season_matches <- tourneyRes[which(tourneyRes$season == "2013"), ]
team <- vector()
result <- vector()
for(i in c(1:nrow(season_matches))) {
row <- season_matches[i, ]
if(row$wteam < row$lteam) {
vector <- paste("2013","_",row$wteam,"_", row$lteam, sep ="")
team <- c(team, vector)
result <- c(result, 1)
} else {
oth <- paste("2013", "_", row$lteam, "_", row$wteam, sep ="")
team <- c(team, oth)
result <- c(result, 0)
}
}
actual_data_frame <- data.frame("Matchup" = team, "Win" = result)
head(actual_data_frame)
#check how accurate model was
final_logit<-merge(subfile,actual_data_frame,by.x="id",by.y="Matchup")
#remove NA
final_logit<-final_logit[complete.cases(final_logit),]
#get results of accuracy
sum<-0
for(i in c(1:nrow(final_logit))) {
row <- final_logit[i, ]
if(row$Win==1)
#sum <- row$pred*row$Win + sum
sum <- log(row$pred)*row$Win + sum
else
sum <- log(1-row$pred) + sum
#sum <- 1 - row$pred + sum
}
logloss_KNN<- (-sum)/nrow(final_logit)
logloss_KNN
binaryTrain=ifelse(trainData$Win==1,"Win","Lose")
binaryTest=ifelse(testData$Win==1,"Win","Lose")
binTrain=data.frame(trainData,binaryTrain)
binTest=data.frame(testData,binaryTest)
c1=as.factor(binTrain$binaryTrain)
binTrain1<-binTrain[,names(binTrain)[-c(1,2,3,4,8,12,13)]]
binTest1<-binTest[,names(binTest)[-c(1,2,3,4,8,12,13)]]
set.seed(1)
output <- knn(binTrain1, binTest1, c1, k = 300, prob=TRUE)
#predictions_KNN <- predict(output, binTest, type = "prob")
#predictions <- data.frame(output)
#predictions<-predictions[,names(predictions)[-c(2)]]
subfile <- data.frame(id = testData$Matchup, pred = attributes(output)$prob) #predictions)
write.csv(subfile, file = "KNN_model.csv", row.names = FALSE)
#to see how well model matched actual tournament results
tourneyRes<-read.csv("tourney_compact_results.csv")
season_matches <- tourneyRes[which(tourneyRes$season == "2013"), ]
team <- vector()
result <- vector()
for(i in c(1:nrow(season_matches))) {
row <- season_matches[i, ]
if(row$wteam < row$lteam) {
vector <- paste("2013","_",row$wteam,"_", row$lteam, sep ="")
team <- c(team, vector)
result <- c(result, 1)
} else {
oth <- paste("2013", "_", row$lteam, "_", row$wteam, sep ="")
team <- c(team, oth)
result <- c(result, 0)
}
}
actual_data_frame <- data.frame("Matchup" = team, "Win" = result)
head(actual_data_frame)
#check how accurate model was
final_logit<-merge(subfile,actual_data_frame,by.x="id",by.y="Matchup")
#remove NA
final_logit<-final_logit[complete.cases(final_logit),]
#get results of accuracy
sum<-0
for(i in c(1:nrow(final_logit))) {
row <- final_logit[i, ]
if(row$Win==1)
#sum <- row$pred*row$Win + sum
sum <- log(row$pred)*row$Win + sum
else
sum <- log(1-row$pred) + sum
#sum <- 1 - row$pred + sum
}
logloss_KNN<- (-sum)/nrow(final_logit)
logloss_KNN
View(trainData)
